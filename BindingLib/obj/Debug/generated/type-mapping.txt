cn/pda/serialport/SerialPort = CN.Pda.Serialport.SerialPort
  <init>()V = .ctor()
  <init>(III)V = .ctor(int, int, int)
  TNCOM_EVENPARITY = TncomEvenparity
  TNCOM_ODDPARITY = TncomOddparity
  getInputStream()Ljava/io/InputStream; = InputStream
  getOutputStream()Ljava/io/OutputStream; = OutputStream
  close(I)V = Close(int)
  irdapoweroff()V = Irdapoweroff()
  irdapoweron()V = Irdapoweron()
  power_3v3off()V = Power_3v3off()
  power_3v3on()V = Power_3v3on()
  power_5Voff()V = Power_5Voff()
  power_5Von()V = Power_5Von()
  power3v3off()V = Power3v3off()
  power3v3on()V = Power3v3on()
  psam_poweroff()V = Psam_poweroff()
  psam_poweron()V = Psam_poweron()
  psampoweroff()V = Psampoweroff()
  psampoweron()V = Psampoweron()
  rfid_poweroff()V = Rfid_poweroff()
  rfid_poweron()V = Rfid_poweron()
  rfidPoweroff()V = RfidPoweroff()
  rfidPoweron()V = RfidPoweron()
  scaner_poweroff()V = Scaner_poweroff()
  scaner_poweron()V = Scaner_poweron()
  scaner_trig_stat()Z = Scaner_trig_stat()
  scaner_trigoff()V = Scaner_trigoff()
  scaner_trigon()V = Scaner_trigon()
  scanerpoweroff()V = Scanerpoweroff()
  scanerpoweron()V = Scanerpoweron()
  scanertrigeroff()V = Scanertrigeroff()
  scanertrigeron()V = Scanertrigeron()
  setGPIOhigh(I)V = SetGPIOhigh(int)
  setGPIOlow(I)V = SetGPIOlow(int)
  test([B)V = Test(byte[])
  usbOTGpowerOff()V = UsbOTGpowerOff()
  usbOTGpowerOn()V = UsbOTGpowerOn()
  zigbeepoweroff()V = Zigbeepoweroff()
  zigbeepoweron()V = Zigbeepoweron()
cn/pda/serialport/Tools = CN.Pda.Serialport.Tools
  <init>()V = .ctor()
  Bytes2HexString([BI)Ljava/lang/String; = Bytes2HexString(byte[], int)
  bytesToInt([B)I = BytesToInt(byte[])
  getmyTime()Ljava/lang/String; = GetmyTime()
  HexString2Bytes(Ljava/lang/String;)[B = HexString2Bytes(string)
  intToByte(I)[B = IntToByte(int)
  uniteBytes(BB)B = UniteBytes(sbyte, sbyte)
com/handheld/uhfr/UHFRManager = Com.Handheld.Uhfr.UHFRManager
  <init>()V = .ctor()
  dv = Dv
  getHardware()Ljava/lang/String; = Hardware
  getInfo()Ljava/lang/String; = Info
  getInstance()Lcom/handheld/uhfr/UHFRManager; = Instance
  getRegion()Lcom/uhf/api/cls/Reader$Region_Conf; = Region
  getTemperature()I = Temperature
  asyncStartReading()Lcom/uhf/api/cls/Reader$READER_ERR; = AsyncStartReading()
  asyncStopReading()Lcom/uhf/api/cls/Reader$READER_ERR; = AsyncStopReading()
  close()Z = Close()
  getFrequencyPoints()[I = GetFrequencyPoints()
  getPower()[I = GetPower()
  getTagData(III[B[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = GetTagData(int, int, int, byte[], byte[], short)
  getTagDataByFilter(III[BS[BIIZ)[B = GetTagDataByFilter(int, int, int, byte[], short, byte[], int, int, bool)
  killTag([BS)Lcom/uhf/api/cls/Reader$READER_ERR; = KillTag(byte[], short)
  killTagByFilter([BS[BIIZ)Lcom/uhf/api/cls/Reader$READER_ERR; = KillTagByFilter(byte[], short, byte[], int, int, bool)
  lockTag(Lcom/uhf/api/cls/Reader$Lock_Obj;Lcom/uhf/api/cls/Reader$Lock_Type;[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = LockTag(Com.Uhf.Api.Cls.Reader.Lock_Obj, Com.Uhf.Api.Cls.Reader.Lock_Type, byte[], short)
  lockTagByFilter(Lcom/uhf/api/cls/Reader$Lock_Obj;Lcom/uhf/api/cls/Reader$Lock_Type;[BS[BIIZ)Lcom/uhf/api/cls/Reader$READER_ERR; = LockTagByFilter(Com.Uhf.Api.Cls.Reader.Lock_Obj, Com.Uhf.Api.Cls.Reader.Lock_Type, byte[], short, byte[], int, int, bool)
  ReadTagLED(ISSLcom/uhf/api/cls/R2000_calibration$TagLED_DATA;)Lcom/uhf/api/cls/Reader$READER_ERR; = ReadTagLED(int, short, short, Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA)
  setCancleFastMode()Lcom/uhf/api/cls/Reader$READER_ERR; = SetCancleFastMode()
  setCancleInventoryFilter()Z = SetCancleInventoryFilter()
  setFastMode()Lcom/uhf/api/cls/Reader$READER_ERR; = SetFastMode()
  setFrequencyPoints([I)Lcom/uhf/api/cls/Reader$READER_ERR; = SetFrequencyPoints(int[])
  setGen2session(Z)Z = SetGen2session(bool)
  setInventoryFilter([BIIZ)Z = SetInventoryFilter(byte[], int, int, bool)
  setPower(II)Lcom/uhf/api/cls/Reader$READER_ERR; = SetPower(int, int)
  setRegion(Lcom/uhf/api/cls/Reader$Region_Conf;)Lcom/uhf/api/cls/Reader$READER_ERR; = SetRegion(Com.Uhf.Api.Cls.Reader.Region_Conf)
  stopTagInventory()Z = StopTagInventory()
  tagEpcOtherInventoryByTimer(SIII[B)Ljava/util/List; = TagEpcOtherInventoryByTimer(short, int, int, int, byte[])
  tagEpcTidInventoryByTimer(S)Ljava/util/List; = TagEpcTidInventoryByTimer(short)
  tagInventoryByTimer(S)Ljava/util/List; = TagInventoryByTimer(short)
  tagInventoryRealTime()Ljava/util/List; = TagInventoryRealTime()
  writeTagData(CI[BI[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = WriteTagData(char, int, byte[], int, byte[], short)
  writeTagDataByFilter(CI[BI[BS[BIIZ)Lcom/uhf/api/cls/Reader$READER_ERR; = WriteTagDataByFilter(char, int, byte[], int, byte[], short, byte[], int, int, bool)
  writeTagEPC([B[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = WriteTagEPC(byte[], byte[], short)
  writeTagEPCByFilter([B[BS[BIIZ)Lcom/uhf/api/cls/Reader$READER_ERR; = WriteTagEPCByFilter(byte[], byte[], short, byte[], int, int, bool)
com/uhf/api/cls/BackReadOption = Com.Uhf.Api.Cls.BackReadOption
  <init>()V = .ctor()
  FastReadDutyRation = FastReadDutyRation
  GpiTrigger = GpiTrigger
  IsFastRead = IsFastRead
  IsGPITrigger = IsGPITrigger
  ReadDuration = ReadDuration
  ReadInterval = ReadInterval
  TMFlags = TMFlags
com/uhf/api/cls/ErrInfo = Com.Uhf.Api.Cls.ErrInfo
  <init>()V = .ctor()
  derrcode = Derrcode
  errstr = Errstr
com/uhf/api/cls/GpiInfo_ST = Com.Uhf.Api.Cls.GpiInfo_ST
  <init>()V = .ctor()
  gpiCount = GpiCount
  gpiStats = GpiStats
com/uhf/api/cls/GpiState_ST = Com.Uhf.Api.Cls.GpiState_ST
  <init>()V = .ctor()
  GpiId = GpiId
  State = State
com/uhf/api/cls/GPITrigger = Com.Uhf.Api.Cls.GPITrigger
  <init>()V = .ctor()
  GpiTrigger1States = GpiTrigger1States
  GpiTrigger2States = GpiTrigger2States
  StopTriggerTimeout = StopTriggerTimeout
  TriggerType = TriggerType
com/uhf/api/cls/GpiTrigger_Type = Com.Uhf.Api.Cls.GpiTrigger_Type
  GPITRIGGER_NONE = GpitriggerNone
  GPITRIGGER_TRI1ORTRI2START_TIMEOUTSTOP = GpitriggerTri1ortri2startTimeoutstop
  GPITRIGGER_TRI1START_TIMEOUTSTOP = GpitriggerTri1startTimeoutstop
  GPITRIGGER_TRI1START_TRI2STOP = GpitriggerTri1startTri2stop
  valueOf(Ljava/lang/String;)Lcom/uhf/api/cls/GpiTrigger_Type; = ValueOf(string)
  values()[Lcom/uhf/api/cls/GpiTrigger_Type; = Values()
com/uhf/api/cls/GpiTriggerBoundaryListener = Com.Uhf.Api.Cls.IGpiTriggerBoundaryListener
  GpiTriggerBoundary(Lcom/uhf/api/cls/Reader;Lcom/uhf/api/cls/GpiTriggerBoundaryType;Lcom/uhf/api/cls/GpiTriggerBoundaryReasonType;)V = GpiTriggerBoundary(Com.Uhf.Api.Cls.Reader, Com.Uhf.Api.Cls.GpiTriggerBoundaryType, Com.Uhf.Api.Cls.GpiTriggerBoundaryReasonType)
com/uhf/api/cls/GpiTriggerBoundaryReasonType = Com.Uhf.Api.Cls.GpiTriggerBoundaryReasonType
  GpiTriggerBoundaryReason_ByGpi = GpiTriggerBoundaryReasonByGpi
  GpiTriggerBoundaryReason_ByTimeout = GpiTriggerBoundaryReasonByTimeout
  GpiTriggerBoundaryReason_None = GpiTriggerBoundaryReasonNone
  valueOf(Ljava/lang/String;)Lcom/uhf/api/cls/GpiTriggerBoundaryReasonType; = ValueOf(string)
  values()[Lcom/uhf/api/cls/GpiTriggerBoundaryReasonType; = Values()
com/uhf/api/cls/GpiTriggerBoundaryType = Com.Uhf.Api.Cls.GpiTriggerBoundaryType
  GPITriggerBoundary_None = GPITriggerBoundaryNone
  GPITriggerBoundary_StartInventory = GPITriggerBoundaryStartInventory
  GPITriggerBoundary_StopInventory = GPITriggerBoundaryStopInventory
  valueOf(Ljava/lang/String;)Lcom/uhf/api/cls/GpiTriggerBoundaryType; = ValueOf(string)
  values()[Lcom/uhf/api/cls/GpiTriggerBoundaryType; = Values()
com/uhf/api/cls/GpiTriggerListener = Com.Uhf.Api.Cls.IGpiTriggerListener
  GpiTrigger(Lcom/uhf/api/cls/Reader;Lcom/uhf/api/cls/GpiInfo_ST;I)V = GpiTrigger(Com.Uhf.Api.Cls.Reader, Com.Uhf.Api.Cls.GpiInfo_ST, int)
com/uhf/api/cls/JniModuleAPI = Com.Uhf.Api.Cls.JniModuleAPI
  <init>()V = .ctor()
  GetSDKVersion()I = SDKVersion
  AsyncGetNextTag(I[Lcom/uhf/api/cls/Reader$TAGINFO;)I = AsyncGetNextTag(int, Com.Uhf.Api.Cls.Reader.TAGINFO[])
  AsyncGetNextTag_BaseType(I[B)I = AsyncGetNextTag_BaseType(int, byte[])
  AsyncGetTagCount(I[I)I = AsyncGetTagCount(int, int[])
  AsyncStartReading(I[III)I = AsyncStartReading(int, int[], int, int)
  AsyncStopReading(I)I = AsyncStopReading(int)
  BlockErase(IIIII[BS)I = BlockErase(int, int, int, int, int, byte[], short)
  BlockPermaLock(IIIII[B[BS)I = BlockPermaLock(int, int, int, int, int, byte[], byte[], short)
  CloseReader(I)V = CloseReader(int)
  CustomCmd_BaseType(III[B[B)I = CustomCmd_BaseType(int, int, int, byte[], byte[])
  DataTransportRecv(I[BII)I = DataTransportRecv(int, byte[], int, int)
  DataTransportSend(I[BII)I = DataTransportSend(int, byte[], int, int)
  EraseDataOnReader(I)I = EraseDataOnReader(int)
  FirmwareLoadFromSerialPort(Ljava/lang/String;Ljava/lang/String;)I = FirmwareLoadFromSerialPort(string, string)
  Get_GPIEx(ILcom/uhf/api/cls/GpiInfo_ST;)I = Get_GPIEx(int, Com.Uhf.Api.Cls.GpiInfo_ST)
  GetDeviceVersion(Ljava/lang/String;[B)I = GetDeviceVersion(string, byte[])
  GetGPI(II[I)I = GetGPI(int, int, int[])
  GetGPIEx_BaseType(I[B)I = GetGPIEx_BaseType(int, byte[])
  GetHardwareDetails(ILjava/lang/Object;)I = GetHardwareDetails(int, Java.Lang.Object)
  GetHardwareDetails_BaseType(I[B)I = GetHardwareDetails_BaseType(int, byte[])
  GetLastDetailError(ILcom/uhf/api/cls/ErrInfo;)I = GetLastDetailError(int, Com.Uhf.Api.Cls.ErrInfo)
  GetLastDetailError_BaseType(I[B)I = GetLastDetailError_BaseType(int, byte[])
  GetNextTag_BaseType(I[B)I = GetNextTag_BaseType(int, byte[])
  GetTagData(IICII[B[BS)I = GetTagData(int, int, char, int, int, byte[], byte[], short)
  InitReader([ILjava/lang/String;I)I = InitReader(int[], string, int)
  InitReader_Notype([ILjava/lang/String;I)I = InitReader_Notype(int[], string, int)
  KillTag(II[BS)I = KillTag(int, int, byte[], short)
  Lock180006BTag(IIIIS)I = Lock180006BTag(int, int, int, int, short)
  LockTag(IIBS[BS)I = LockTag(int, int, sbyte, short, byte[], short)
  ParamGet(IILjava/lang/Object;)I = ParamGet(int, int, Java.Lang.Object)
  ParamGet_BaseType(II[B)I = ParamGet_BaseType(int, int, byte[])
  ParamSet(IILjava/lang/Object;)I = ParamSet(int, int, Java.Lang.Object)
  ParamSet_BaseType(II[B)I = ParamSet_BaseType(int, int, byte[])
  PsamTransceiver(III[B[I[B[BS)I = PsamTransceiver(int, int, int, byte[], int[], byte[], byte[], short)
  ReadDataOnReader(II[BI)I = ReadDataOnReader(int, int, byte[], int)
  ReadTagLED(IISS[B[I)I = ReadTagLED(int, int, short, short, byte[], int[])
  ReadTagTemperature(IICIIIIIS[B[B[I)I = ReadTagTemperature(int, int, char, int, int, int, int, int, short, byte[], byte[], int[])
  RebootReader(Ljava/lang/String;)I = RebootReader(string)
  ResetRfidModule(I)I = ResetRfidModule(int)
  SaveDataOnReader(II[BI)I = SaveDataOnReader(int, int, byte[], int)
  SetGPO(III)I = SetGPO(int, int, int)
  TagInventory_BaseType(I[IIS[B[I)I = TagInventory_BaseType(int, int[], int, short, byte[], int[])
  TagInventory_Raw(I[IIS[I)I = TagInventory_Raw(int, int[], int, short, int[])
  WriteTagData(IICI[BI[BS)I = WriteTagData(int, int, char, int, byte[], int, byte[], short)
  WriteTagEpcEx(II[BI[BS)I = WriteTagEpcEx(int, int, byte[], int, byte[], short)
com/uhf/api/cls/R2000_calibration = Com.Uhf.Api.Cls.R2000_calibration
  <init>()V = .ctor()
  bytesToint([B)I = BytesToint(byte[])
  bytesToint([BI)I = BytesToint(byte[], int)
  bytesTolistbytes([B)Ljava/util/List; = BytesTolistbytes(byte[])
  bytesToshort([B)S = BytesToshort(byte[])
  calcCrc([BII)[B = CalcCrc(byte[], int, int)
  calcCrc_short([B)S = CalcCrc_short(byte[])
  GetSendCmd(B[B)[B = GetSendCmd(sbyte, byte[])
  GetSendCmd(Lcom/uhf/api/cls/R2000_calibration$R2000cmd;[B)[B = GetSendCmd(Com.Uhf.Api.Cls.R2000_calibration.R2000cmd, byte[])
  intsTolistints([I)Ljava/util/List; = IntsTolistints(int[])
  intTobytes(I)[B = IntTobytes(int)
  intTolistbytes(I)Ljava/util/List; = IntTolistbytes(int)
  ListBtobytes(Ljava/util/List;)[B = ListBtobytes(System.Collections.Generic.IList<Java.Lang.Byte>)
  shortTobytes(S)[B = ShortTobytes(short)
  shortTolistbytes(S)Ljava/util/List; = ShortTolistbytes(short)
com/uhf/api/cls/Reader = Com.Uhf.Api.Cls.Reader
  <init>()V = .ctor()
  gpitriboundListener = GpitriboundListener
  gpitriListener = GpitriListener
  HOPTABLECNT = Hoptablecnt
  MAXANTCNT = Maxantcnt
  MAXEMBDATALEN = Maxembdatalen
  MAXEPCBYTESCNT = Maxepcbytescnt
  MAXINVPOTLSCNT = Maxinvpotlscnt
  MAXIPSTRLEN = Maxipstrlen
  readExceptionListeners = ReadExceptionListeners
  readListeners = ReadListeners
  GetReaderAddress()Ljava/lang/String; = ReaderAddress
  GetSDKVersion()Ljava/lang/String; = SDKVersion
  addGpiTriggerBoundaryListener(Lcom/uhf/api/cls/GpiTriggerBoundaryListener;)V = AddGpiTriggerBoundaryListener(Com.Uhf.Api.Cls.IGpiTriggerBoundaryListener)
  addGpiTriggerListener(Lcom/uhf/api/cls/GpiTriggerListener;)V = AddGpiTriggerListener(Com.Uhf.Api.Cls.IGpiTriggerListener)
  addReadExceptionListener(Lcom/uhf/api/cls/ReadExceptionListener;)V = AddReadExceptionListener(Com.Uhf.Api.Cls.IReadExceptionListener)
  addReadListener(Lcom/uhf/api/cls/ReadListener;)V = AddReadListener(Com.Uhf.Api.Cls.IReadListener)
  AsyncGetNextTag(Lcom/uhf/api/cls/Reader$TAGINFO;)Lcom/uhf/api/cls/Reader$READER_ERR; = AsyncGetNextTag(Com.Uhf.Api.Cls.Reader.TAGINFO)
  AsyncGetTagCount([I)Lcom/uhf/api/cls/Reader$READER_ERR; = AsyncGetTagCount(int[])
  AsyncStartReading([III)Lcom/uhf/api/cls/Reader$READER_ERR; = AsyncStartReading(int[], int, int)
  AsyncStopReading()Lcom/uhf/api/cls/Reader$READER_ERR; = AsyncStopReading()
  BlockErase(IIII[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = BlockErase(int, int, int, int, byte[], short)
  BlockPermaLock(IIII[B[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = BlockPermaLock(int, int, int, int, byte[], byte[], short)
  bytes_Hexstr([B)Ljava/lang/String; = Bytes_Hexstr(byte[])
  CloseReader()V = CloseReader()
  CustomCmd(ILcom/uhf/api/cls/Reader$CustomCmdType;Ljava/lang/Object;Ljava/lang/Object;)Lcom/uhf/api/cls/Reader$READER_ERR; = CustomCmd(int, Com.Uhf.Api.Cls.Reader.CustomCmdType, Java.Lang.Object, Java.Lang.Object)
  CustomCmd_BaseType(II[B[B)Lcom/uhf/api/cls/Reader$READER_ERR; = CustomCmd_BaseType(int, int, byte[], byte[])
  DataTransportRecv([BII)I = DataTransportRecv(byte[], int, int)
  DataTransportSend([BII)I = DataTransportSend(byte[], int, int)
  EraseDataOnReader()Lcom/uhf/api/cls/Reader$READER_ERR; = EraseDataOnReader()
  FirmwareLoadFromSerialPort(Ljava/lang/String;Ljava/lang/String;)Lcom/uhf/api/cls/Reader$READER_ERR; = FirmwareLoadFromSerialPort(string, string)
  GetDeviceVersion(Ljava/lang/String;Lcom/uhf/api/cls/Reader$deviceVersion;)Lcom/uhf/api/cls/Reader$READER_ERR; = GetDeviceVersion(string, Com.Uhf.Api.Cls.Reader.DeviceVersion)
  GetGPI(I[I)Lcom/uhf/api/cls/Reader$READER_ERR; = GetGPI(int, int[])
  GetGPIEx(Lcom/uhf/api/cls/GpiInfo_ST;)Lcom/uhf/api/cls/Reader$READER_ERR; = GetGPIEx(Com.Uhf.Api.Cls.GpiInfo_ST)
  GetHardwareDetails(Lcom/uhf/api/cls/Reader$HardwareDetails;)Lcom/uhf/api/cls/Reader$READER_ERR; = GetHardwareDetails(Com.Uhf.Api.Cls.Reader.HardwareDetails)
  GetLastDetailError(Lcom/uhf/api/cls/ErrInfo;)Lcom/uhf/api/cls/Reader$READER_ERR; = GetLastDetailError(Com.Uhf.Api.Cls.ErrInfo)
  GetNextTag(Lcom/uhf/api/cls/Reader$TAGINFO;)Lcom/uhf/api/cls/Reader$READER_ERR; = GetNextTag(Com.Uhf.Api.Cls.Reader.TAGINFO)
  GetNextTag_BaseType([B)Lcom/uhf/api/cls/Reader$READER_ERR; = GetNextTag_BaseType(byte[])
  GetSerialNumber(Lcom/uhf/api/cls/Reader$DeviceSerialNumber;)Lcom/uhf/api/cls/Reader$READER_ERR; = GetSerialNumber(Com.Uhf.Api.Cls.Reader.DeviceSerialNumber)
  GetTagData(ICII[B[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = GetTagData(int, char, int, int, byte[], byte[], short)
  Hex2Str([BI[C)V = Hex2Str(byte[], int, char[])
  InitReader(Ljava/lang/String;Lcom/uhf/api/cls/Reader$Reader_Type;)Lcom/uhf/api/cls/Reader$READER_ERR; = InitReader(string, Com.Uhf.Api.Cls.Reader.Reader_Type)
  InitReader_Notype(Ljava/lang/String;I)Lcom/uhf/api/cls/Reader$READER_ERR; = InitReader_Notype(string, int)
  KillTag(I[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = KillTag(int, byte[], short)
  Lock180006BTag(IIIS)Lcom/uhf/api/cls/Reader$READER_ERR; = Lock180006BTag(int, int, int, short)
  LockTag(IBS[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = LockTag(int, sbyte, short, byte[], short)
  ParamGet(Lcom/uhf/api/cls/Reader$Mtr_Param;Ljava/lang/Object;)Lcom/uhf/api/cls/Reader$READER_ERR; = ParamGet(Com.Uhf.Api.Cls.Reader.Mtr_Param, Java.Lang.Object)
  ParamSet(Lcom/uhf/api/cls/Reader$Mtr_Param;Ljava/lang/Object;)Lcom/uhf/api/cls/Reader$READER_ERR; = ParamSet(Com.Uhf.Api.Cls.Reader.Mtr_Param, Java.Lang.Object)
  PsamTransceiver(II[B[I[B[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = PsamTransceiver(int, int, byte[], int[], byte[], byte[], short)
  ReadDataOnReader(I[BI)Lcom/uhf/api/cls/Reader$READER_ERR; = ReadDataOnReader(int, byte[], int)
  ReadTagLED(ISSLcom/uhf/api/cls/R2000_calibration$TagLED_DATA;)Lcom/uhf/api/cls/Reader$READER_ERR; = ReadTagLED(int, short, short, Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA)
  ReadTagTemperature(ICIIIIIS[BLcom/uhf/api/cls/R2000_calibration$Tagtemperture_DATA;)Lcom/uhf/api/cls/Reader$READER_ERR; = ReadTagTemperature(int, char, int, int, int, int, int, short, byte[], Com.Uhf.Api.Cls.R2000_calibration.Tagtemperture_DATA)
  RebootReader(Ljava/lang/String;)Lcom/uhf/api/cls/Reader$READER_ERR; = RebootReader(string)
  removeGpiTriggerBoundaryListener(Lcom/uhf/api/cls/GpiTriggerBoundaryListener;)V = RemoveGpiTriggerBoundaryListener(Com.Uhf.Api.Cls.IGpiTriggerBoundaryListener)
  removeGpiTriggerListener(Lcom/uhf/api/cls/GpiTriggerListener;)V = RemoveGpiTriggerListener(Com.Uhf.Api.Cls.IGpiTriggerListener)
  removeReadExceptionListener(Lcom/uhf/api/cls/ReadExceptionListener;)V = RemoveReadExceptionListener(Com.Uhf.Api.Cls.IReadExceptionListener)
  removeReadListener(Lcom/uhf/api/cls/ReadListener;)V = RemoveReadListener(Com.Uhf.Api.Cls.IReadListener)
  ResetRfidModule()Lcom/uhf/api/cls/Reader$READER_ERR; = ResetRfidModule()
  SaveDataOnReader(I[BI)Lcom/uhf/api/cls/Reader$READER_ERR; = SaveDataOnReader(int, byte[], int)
  SetGPO(II)Lcom/uhf/api/cls/Reader$READER_ERR; = SetGPO(int, int)
  StartReading([IILcom/uhf/api/cls/BackReadOption;)Lcom/uhf/api/cls/Reader$READER_ERR; = StartReading(int[], int, Com.Uhf.Api.Cls.BackReadOption)
  StopReading()Lcom/uhf/api/cls/Reader$READER_ERR; = StopReading()
  Str2Binary(Ljava/lang/String;I[B)V = Str2Binary(string, int, byte[])
  Str2Hex(Ljava/lang/String;I[B)V = Str2Hex(string, int, byte[])
  TagInventory([IIS[Lcom/uhf/api/cls/Reader$TAGINFO;[I)Lcom/uhf/api/cls/Reader$READER_ERR; = TagInventory(int[], int, short, Com.Uhf.Api.Cls.Reader.TAGINFO[], int[])
  TagInventory_BaseType([IIS[B[I)Lcom/uhf/api/cls/Reader$READER_ERR; = TagInventory_BaseType(int[], int, short, byte[], int[])
  TagInventory_Raw([IIS[I)Lcom/uhf/api/cls/Reader$READER_ERR; = TagInventory_Raw(int[], int, short, int[])
  WriteTagData(ICI[BI[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = WriteTagData(int, char, int, byte[], int, byte[], short)
  WriteTagEpcEx(I[BI[BS)Lcom/uhf/api/cls/Reader$READER_ERR; = WriteTagEpcEx(int, byte[], int, byte[], short)
com/uhf/api/cls/ReadExceptionListener = Com.Uhf.Api.Cls.IReadExceptionListener
  tagReadException(Lcom/uhf/api/cls/Reader;Lcom/uhf/api/cls/Reader$READER_ERR;)V = TagReadException(Com.Uhf.Api.Cls.Reader, Com.Uhf.Api.Cls.Reader.READER_ERR)
com/uhf/api/cls/ReadListener = Com.Uhf.Api.Cls.IReadListener
  tagRead(Lcom/uhf/api/cls/Reader;[Lcom/uhf/api/cls/Reader$TAGINFO;)V = TagRead(Com.Uhf.Api.Cls.Reader, Com.Uhf.Api.Cls.Reader.TAGINFO[])
com/uhf/api/cls/TagMetaFlags = Com.Uhf.Api.Cls.TagMetaFlags
  <init>()V = .ctor()
  IsAntennaID = IsAntennaID
  IsEmdData = IsEmdData
  IsFrequency = IsFrequency
  IsReadCnt = IsReadCnt
  IsRFU = IsRFU
  IsRSSI = IsRSSI
  IsTimestamp = IsTimestamp
