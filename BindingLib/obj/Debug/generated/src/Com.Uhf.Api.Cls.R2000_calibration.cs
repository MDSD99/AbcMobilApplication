//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Uhf.Api.Cls {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']"
	[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration", DoNotGenerateAcw=true)]
	public partial class R2000_calibration : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.ENGTest_DATA']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$ENGTest_DATA", DoNotGenerateAcw=true)]
		public partial class ENGTest_DATA : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$ENGTest_DATA", typeof (ENGTest_DATA));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected ENGTest_DATA (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.ENGTest_DATA']/constructor[@name='R2000_calibration.ENGTest_DATA' and count(parameter)=4 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='byte'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;BII)V", "")]
			public unsafe ENGTest_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, sbyte scmd, int a0, int a1) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";BII)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [4];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (scmd);
					__args [2] = new JniArgumentValue (a0);
					__args [3] = new JniArgumentValue (a1);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate cb_ToByteData;
#pragma warning disable 0169
			static Delegate GetToByteDataHandler ()
			{
				if (cb_ToByteData == null)
					cb_ToByteData = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToByteData));
				return cb_ToByteData;
			}

			static IntPtr n_ToByteData (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.ENGTest_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.ToByteData ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.ENGTest_DATA']/method[@name='ToByteData' and count(parameter)=0]"
			[Register ("ToByteData", "()[B", "GetToByteDataHandler")]
			public virtual unsafe byte[] ToByteData ()
			{
				const string __id = "ToByteData.()[B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.GrossGains_DATA']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$GrossGains_DATA", DoNotGenerateAcw=true)]
		public partial class GrossGains_DATA : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$GrossGains_DATA", typeof (GrossGains_DATA));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected GrossGains_DATA (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.GrossGains_DATA']/constructor[@name='R2000_calibration.GrossGains_DATA' and count(parameter)=2 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='byte[]']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;[B)V", "")]
			public unsafe GrossGains_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, byte[] data) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";[B)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_data = JNIEnv.NewArray (data);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (native_data);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					if (data != null) {
						JNIEnv.CopyArray (native_data, data);
						JNIEnv.DeleteLocalRef (native_data);
					}
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (data);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.GrossGains_DATA']/constructor[@name='R2000_calibration.GrossGains_DATA' and count(parameter)=2 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='int']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;I)V", "")]
			public unsafe GrossGains_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, int addr) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";I)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (addr);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate cb_AddTo_I;
#pragma warning disable 0169
			static Delegate GetAddTo_IHandler ()
			{
				if (cb_AddTo_I == null)
					cb_AddTo_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_AddTo_I));
				return cb_AddTo_I;
			}

			static void n_AddTo_I (IntPtr jnienv, IntPtr native__this, int datav)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.GrossGains_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.AddTo (datav);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.GrossGains_DATA']/method[@name='AddTo' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("AddTo", "(I)V", "GetAddTo_IHandler")]
			public virtual unsafe void AddTo (int datav)
			{
				const string __id = "AddTo.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (datav);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}

			static Delegate cb_LAD;
#pragma warning disable 0169
			static Delegate GetLADHandler ()
			{
				if (cb_LAD == null)
					cb_LAD = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_LAD));
				return cb_LAD;
			}

			static IntPtr n_LAD (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.GrossGains_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return global::Android.Runtime.JavaList<global::Java.Lang.Integer>.ToLocalJniHandle (__this.LAD ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.GrossGains_DATA']/method[@name='LAD' and count(parameter)=0]"
			[Register ("LAD", "()Ljava/util/List;", "GetLADHandler")]
			public virtual unsafe global::System.Collections.Generic.IList<global::Java.Lang.Integer> LAD ()
			{
				const string __id = "LAD.()Ljava/util/List;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.JavaList<global::Java.Lang.Integer>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_ToByteData;
#pragma warning disable 0169
			static Delegate GetToByteDataHandler ()
			{
				if (cb_ToByteData == null)
					cb_ToByteData = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToByteData));
				return cb_ToByteData;
			}

			static IntPtr n_ToByteData (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.GrossGains_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.ToByteData ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.GrossGains_DATA']/method[@name='ToByteData' and count(parameter)=0]"
			[Register ("ToByteData", "()[B", "GetToByteDataHandler")]
			public virtual unsafe byte[] ToByteData ()
			{
				const string __id = "ToByteData.()[B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.MAC_DATA']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$MAC_DATA", DoNotGenerateAcw=true)]
		public partial class MAC_DATA : global::Com.Uhf.Api.Cls.R2000_calibration.OEM_DATA {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$MAC_DATA", typeof (MAC_DATA));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MAC_DATA (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.MAC_DATA']/constructor[@name='R2000_calibration.MAC_DATA' and count(parameter)=2 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='byte[]']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;[B)V", "")]
			public unsafe MAC_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, byte[] data) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";[B)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_data = JNIEnv.NewArray (data);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (native_data);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					if (data != null) {
						JNIEnv.CopyArray (native_data, data);
						JNIEnv.DeleteLocalRef (native_data);
					}
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (data);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.MAC_DATA']/constructor[@name='R2000_calibration.MAC_DATA' and count(parameter)=2 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='short']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;S)V", "")]
			public unsafe MAC_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, short addr) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";S)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (addr);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.MAC_DATA']/constructor[@name='R2000_calibration.MAC_DATA' and count(parameter)=3 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='short'] and parameter[3][@type='int']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;SI)V", "")]
			public unsafe MAC_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, short addr, int datav) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";SI)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (addr);
					__args [2] = new JniArgumentValue (datav);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$META_DATA", DoNotGenerateAcw=true)]
		public partial class META_DATA : global::Java.Lang.Object {

			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']/field[@name='IsAntennaID']"
			[Register ("IsAntennaID")]
			public bool IsAntennaID {
				get {
					const string __id = "IsAntennaID.Z";

					var __v = _members.InstanceFields.GetBooleanValue (__id, this);
					return __v;
				}
				set {
					const string __id = "IsAntennaID.Z";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']/field[@name='IsEmdData']"
			[Register ("IsEmdData")]
			public bool IsEmdData {
				get {
					const string __id = "IsEmdData.Z";

					var __v = _members.InstanceFields.GetBooleanValue (__id, this);
					return __v;
				}
				set {
					const string __id = "IsEmdData.Z";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']/field[@name='IsFrequency']"
			[Register ("IsFrequency")]
			public bool IsFrequency {
				get {
					const string __id = "IsFrequency.Z";

					var __v = _members.InstanceFields.GetBooleanValue (__id, this);
					return __v;
				}
				set {
					const string __id = "IsFrequency.Z";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']/field[@name='IsPro']"
			[Register ("IsPro")]
			public bool IsPro {
				get {
					const string __id = "IsPro.Z";

					var __v = _members.InstanceFields.GetBooleanValue (__id, this);
					return __v;
				}
				set {
					const string __id = "IsPro.Z";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']/field[@name='IsReadCnt']"
			[Register ("IsReadCnt")]
			public bool IsReadCnt {
				get {
					const string __id = "IsReadCnt.Z";

					var __v = _members.InstanceFields.GetBooleanValue (__id, this);
					return __v;
				}
				set {
					const string __id = "IsReadCnt.Z";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']/field[@name='IsRFU']"
			[Register ("IsRFU")]
			public bool IsRFU {
				get {
					const string __id = "IsRFU.Z";

					var __v = _members.InstanceFields.GetBooleanValue (__id, this);
					return __v;
				}
				set {
					const string __id = "IsRFU.Z";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']/field[@name='IsRSSI']"
			[Register ("IsRSSI")]
			public bool IsRSSI {
				get {
					const string __id = "IsRSSI.Z";

					var __v = _members.InstanceFields.GetBooleanValue (__id, this);
					return __v;
				}
				set {
					const string __id = "IsRSSI.Z";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']/field[@name='IsTimestamp']"
			[Register ("IsTimestamp")]
			public bool IsTimestamp {
				get {
					const string __id = "IsTimestamp.Z";

					var __v = _members.InstanceFields.GetBooleanValue (__id, this);
					return __v;
				}
				set {
					const string __id = "IsTimestamp.Z";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$META_DATA", typeof (META_DATA));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected META_DATA (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']/constructor[@name='R2000_calibration.META_DATA' and count(parameter)=1 and parameter[1][@type='com.uhf.api.cls.R2000_calibration']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;)V", "")]
			public unsafe META_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate cb_getMetaflag;
#pragma warning disable 0169
			static Delegate GetGetMetaflagHandler ()
			{
				if (cb_getMetaflag == null)
					cb_getMetaflag = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_S (n_GetMetaflag));
				return cb_getMetaflag;
			}

			static short n_GetMetaflag (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.META_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Metaflag;
			}
#pragma warning restore 0169

			public virtual unsafe short Metaflag {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.META_DATA']/method[@name='getMetaflag' and count(parameter)=0]"
				[Register ("getMetaflag", "()S", "GetGetMetaflagHandler")]
				get {
					const string __id = "getMetaflag.()S";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualInt16Method (__id, this, null);
						return __rm;
					} finally {
					}
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$OEM_DATA", DoNotGenerateAcw=true)]
		public partial class OEM_DATA : global::Java.Lang.Object {
			// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA.Adpair']"
			[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$OEM_DATA$Adpair", DoNotGenerateAcw=true)]
			public partial class Adpair : global::Java.Lang.Object {

				// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA.Adpair']/field[@name='addr']"
				[Register ("addr")]
				public short Addr {
					get {
						const string __id = "addr.S";

						var __v = _members.InstanceFields.GetInt16Value (__id, this);
						return __v;
					}
					set {
						const string __id = "addr.S";

						try {
							_members.InstanceFields.SetValue (__id, this, value);
						} finally {
						}
					}
				}


				// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA.Adpair']/field[@name='val']"
				[Register ("val")]
				public int Val {
					get {
						const string __id = "val.I";

						var __v = _members.InstanceFields.GetInt32Value (__id, this);
						return __v;
					}
					set {
						const string __id = "val.I";

						try {
							_members.InstanceFields.SetValue (__id, this, value);
						} finally {
						}
					}
				}

				static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$OEM_DATA$Adpair", typeof (Adpair));

				internal static IntPtr class_ref {
					get { return _members.JniPeerType.PeerReference.Handle; }
				}

				[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
				[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
				public override global::Java.Interop.JniPeerMembers JniPeerMembers {
					get { return _members; }
				}

				[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
				[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
				protected override IntPtr ThresholdClass {
					get { return _members.JniPeerType.PeerReference.Handle; }
				}

				[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
				[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
				protected override global::System.Type ThresholdType {
					get { return _members.ManagedPeerType; }
				}

				protected Adpair (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
				{
				}

				// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA.Adpair']/constructor[@name='R2000_calibration.OEM_DATA.Adpair' and count(parameter)=1 and parameter[1][@type='com.uhf.api.cls.R2000_calibration.OEM_DATA']]"
				[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration$OEM_DATA;)V", "")]
				public unsafe Adpair (global::Com.Uhf.Api.Cls.R2000_calibration.OEM_DATA __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
				{
					string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";)V";

					if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
						return;

					try {
						JniArgumentValue* __args = stackalloc JniArgumentValue [1];
						__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
						var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
						SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
						_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
					} finally {
						global::System.GC.KeepAlive (__self);
					}
				}

			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$OEM_DATA", typeof (OEM_DATA));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected OEM_DATA (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA']/constructor[@name='R2000_calibration.OEM_DATA' and count(parameter)=2 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='byte[]']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;[B)V", "")]
			public unsafe OEM_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, byte[] data) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";[B)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_data = JNIEnv.NewArray (data);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (native_data);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					if (data != null) {
						JNIEnv.CopyArray (native_data, data);
						JNIEnv.DeleteLocalRef (native_data);
					}
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (data);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA']/constructor[@name='R2000_calibration.OEM_DATA' and count(parameter)=2 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='short']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;S)V", "")]
			public unsafe OEM_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, short addr) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";S)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (addr);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA']/constructor[@name='R2000_calibration.OEM_DATA' and count(parameter)=3 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='short'] and parameter[3][@type='int']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;SI)V", "")]
			public unsafe OEM_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, short addr, int datav) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";SI)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (addr);
					__args [2] = new JniArgumentValue (datav);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate cb_AddTo_SI;
#pragma warning disable 0169
			static Delegate GetAddTo_SIHandler ()
			{
				if (cb_AddTo_SI == null)
					cb_AddTo_SI = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPSI_V (n_AddTo_SI));
				return cb_AddTo_SI;
			}

			static void n_AddTo_SI (IntPtr jnienv, IntPtr native__this, short addr, int datav)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.OEM_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.AddTo (addr, datav);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA']/method[@name='AddTo' and count(parameter)=2 and parameter[1][@type='short'] and parameter[2][@type='int']]"
			[Register ("AddTo", "(SI)V", "GetAddTo_SIHandler")]
			public virtual unsafe void AddTo (short addr, int datav)
			{
				const string __id = "AddTo.(SI)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (addr);
					__args [1] = new JniArgumentValue (datav);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}

			static Delegate cb_GetAddr;
#pragma warning disable 0169
			static Delegate GetGetAddrHandler ()
			{
				if (cb_GetAddr == null)
					cb_GetAddr = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAddr));
				return cb_GetAddr;
			}

			static IntPtr n_GetAddr (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.OEM_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.GetAddr ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA']/method[@name='GetAddr' and count(parameter)=0]"
			[Register ("GetAddr", "()[Lcom/uhf/api/cls/R2000_calibration$OEM_DATA$Adpair;", "GetGetAddrHandler")]
			public virtual unsafe global::Com.Uhf.Api.Cls.R2000_calibration.OEM_DATA.Adpair[] GetAddr ()
			{
				const string __id = "GetAddr.()[Lcom/uhf/api/cls/R2000_calibration$OEM_DATA$Adpair;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (global::Com.Uhf.Api.Cls.R2000_calibration.OEM_DATA.Adpair[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Com.Uhf.Api.Cls.R2000_calibration.OEM_DATA.Adpair));
				} finally {
				}
			}

			static Delegate cb_ToByteData;
#pragma warning disable 0169
			static Delegate GetToByteDataHandler ()
			{
				if (cb_ToByteData == null)
					cb_ToByteData = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToByteData));
				return cb_ToByteData;
			}

			static IntPtr n_ToByteData (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.OEM_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.ToByteData ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.OEM_DATA']/method[@name='ToByteData' and count(parameter)=0]"
			[Register ("ToByteData", "()[B", "GetToByteDataHandler")]
			public virtual unsafe byte[] ToByteData ()
			{
				const string __id = "ToByteData.()[B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Pabiascal_DATA']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$Pabiascal_DATA", DoNotGenerateAcw=true)]
		public partial class Pabiascal_DATA : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$Pabiascal_DATA", typeof (Pabiascal_DATA));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected Pabiascal_DATA (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Pabiascal_DATA']/constructor[@name='R2000_calibration.Pabiascal_DATA' and count(parameter)=4 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;III)V", "")]
			public unsafe Pabiascal_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, int a2, int a1, int a0) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";III)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [4];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (a2);
					__args [2] = new JniArgumentValue (a1);
					__args [3] = new JniArgumentValue (a0);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate cb_ToByteData;
#pragma warning disable 0169
			static Delegate GetToByteDataHandler ()
			{
				if (cb_ToByteData == null)
					cb_ToByteData = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToByteData));
				return cb_ToByteData;
			}

			static IntPtr n_ToByteData (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Pabiascal_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.ToByteData ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Pabiascal_DATA']/method[@name='ToByteData' and count(parameter)=0]"
			[Register ("ToByteData", "()[B", "GetToByteDataHandler")]
			public virtual unsafe byte[] ToByteData ()
			{
				const string __id = "ToByteData.()[B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$R2000cmd", DoNotGenerateAcw=true)]
		public sealed partial class R2000cmd : global::Java.Lang.Enum {

			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='carrier']"
			[Register ("carrier")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd Carrier {
				get {
					const string __id = "carrier.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='DCOFFSETCAL']"
			[Register ("DCOFFSETCAL")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd Dcoffsetcal {
				get {
					const string __id = "DCOFFSETCAL.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='ENGTEST']"
			[Register ("ENGTEST")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd Engtest {
				get {
					const string __id = "ENGTEST.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='GROSSGAINSCAL']"
			[Register ("GROSSGAINSCAL")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd Grossgainscal {
				get {
					const string __id = "GROSSGAINSCAL.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='OEMformat']"
			[Register ("OEMformat")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd OEMformat {
				get {
					const string __id = "OEMformat.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='OEMread']"
			[Register ("OEMread")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd OEMread {
				get {
					const string __id = "OEMread.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='OEMwrite']"
			[Register ("OEMwrite")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd OEMwrite {
				get {
					const string __id = "OEMwrite.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='PABIASCAL']"
			[Register ("PABIASCAL")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd Pabiascal {
				get {
					const string __id = "PABIASCAL.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='readMAC']"
			[Register ("readMAC")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd ReadMAC {
				get {
					const string __id = "readMAC.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='Regop']"
			[Register ("Regop")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd Regop {
				get {
					const string __id = "Regop.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='ReturnLossTest']"
			[Register ("ReturnLossTest")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd ReturnLossTest {
				get {
					const string __id = "ReturnLossTest.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='SetTestFre']"
			[Register ("SetTestFre")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd SetTestFre {
				get {
					const string __id = "SetTestFre.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/field[@name='writeMAC']"
			[Register ("writeMAC")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd WriteMAC {
				get {
					const string __id = "writeMAC.Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$R2000cmd", typeof (R2000cmd));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal R2000cmd (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("valueOf", "(Ljava/lang/String;)Lcom/uhf/api/cls/R2000_calibration$R2000cmd;", "")]
			public static unsafe global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd ValueOf (string p0)
			{
				const string __id = "valueOf.(Ljava/lang/String;)Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";
				IntPtr native_p0 = JNIEnv.NewString ((string)p0);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_p0);
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_p0);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.R2000cmd']/method[@name='values' and count(parameter)=0]"
			[Register ("values", "()[Lcom/uhf/api/cls/R2000_calibration$R2000cmd;", "")]
			public static unsafe global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd[] Values ()
			{
				const string __id = "values.()[Lcom/uhf/api/cls/R2000_calibration$R2000cmd;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return (global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd));
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$Region", DoNotGenerateAcw=true)]
		public sealed partial class Region : global::Java.Lang.Enum {

			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='EU']"
			[Register ("EU")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Eu {
				get {
					const string __id = "EU.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='EU2']"
			[Register ("EU2")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Eu2 {
				get {
					const string __id = "EU2.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='EU3']"
			[Register ("EU3")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Eu3 {
				get {
					const string __id = "EU3.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='IN']"
			[Register ("IN")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region In {
				get {
					const string __id = "IN.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='JP']"
			[Register ("JP")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Jp {
				get {
					const string __id = "JP.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='KR']"
			[Register ("KR")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Kr {
				get {
					const string __id = "KR.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='KR2']"
			[Register ("KR2")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Kr2 {
				get {
					const string __id = "KR2.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='NA']"
			[Register ("NA")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Na {
				get {
					const string __id = "NA.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='OPEN']"
			[Register ("OPEN")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Open {
				get {
					const string __id = "OPEN.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='PRC']"
			[Register ("PRC")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Prc {
				get {
					const string __id = "PRC.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='PRC2']"
			[Register ("PRC2")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Prc2 {
				get {
					const string __id = "PRC2.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/field[@name='UNSPEC']"
			[Register ("UNSPEC")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.Region Unspec {
				get {
					const string __id = "UNSPEC.Lcom/uhf/api/cls/R2000_calibration$Region;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$Region", typeof (Region));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal Region (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("valueOf", "(Ljava/lang/String;)Lcom/uhf/api/cls/R2000_calibration$Region;", "")]
			public static unsafe global::Com.Uhf.Api.Cls.R2000_calibration.Region ValueOf (string p0)
			{
				const string __id = "valueOf.(Ljava/lang/String;)Lcom/uhf/api/cls/R2000_calibration$Region;";
				IntPtr native_p0 = JNIEnv.NewString ((string)p0);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_p0);
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_p0);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Region']/method[@name='values' and count(parameter)=0]"
			[Register ("values", "()[Lcom/uhf/api/cls/R2000_calibration$Region;", "")]
			public static unsafe global::Com.Uhf.Api.Cls.R2000_calibration.Region[] Values ()
			{
				const string __id = "values.()[Lcom/uhf/api/cls/R2000_calibration$Region;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return (global::Com.Uhf.Api.Cls.R2000_calibration.Region[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Com.Uhf.Api.Cls.R2000_calibration.Region));
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.SubCmd']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$SubCmd", DoNotGenerateAcw=true)]
		public sealed partial class SubCmd : global::Java.Lang.Enum {

			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.SubCmd']/field[@name='En_low_power_gpio']"
			[Register ("En_low_power_gpio")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd EnLowPowerGpio {
				get {
					const string __id = "En_low_power_gpio.Lcom/uhf/api/cls/R2000_calibration$SubCmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.SubCmd']/field[@name='ReadAD']"
			[Register ("ReadAD")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd ReadAD {
				get {
					const string __id = "ReadAD.Lcom/uhf/api/cls/R2000_calibration$SubCmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.SubCmd']/field[@name='SendControl']"
			[Register ("SendControl")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd SendControl {
				get {
					const string __id = "SendControl.Lcom/uhf/api/cls/R2000_calibration$SubCmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.SubCmd']/field[@name='SetTestAntPow']"
			[Register ("SetTestAntPow")]
			public static global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd SetTestAntPow {
				get {
					const string __id = "SetTestAntPow.Lcom/uhf/api/cls/R2000_calibration$SubCmd;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$SubCmd", typeof (SubCmd));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal SubCmd (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.SubCmd']/method[@name='Value' and count(parameter)=0]"
			[Register ("Value", "()I", "")]
			public unsafe int Value ()
			{
				const string __id = "Value.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeAbstractInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.SubCmd']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("valueOf", "(Ljava/lang/String;)Lcom/uhf/api/cls/R2000_calibration$SubCmd;", "")]
			public static unsafe global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd ValueOf (string p0)
			{
				const string __id = "valueOf.(Ljava/lang/String;)Lcom/uhf/api/cls/R2000_calibration$SubCmd;";
				IntPtr native_p0 = JNIEnv.NewString ((string)p0);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_p0);
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_p0);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.SubCmd']/method[@name='values' and count(parameter)=0]"
			[Register ("values", "()[Lcom/uhf/api/cls/R2000_calibration$SubCmd;", "")]
			public static unsafe global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd[] Values ()
			{
				const string __id = "values.()[Lcom/uhf/api/cls/R2000_calibration$SubCmd;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return (global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Com.Uhf.Api.Cls.R2000_calibration.SubCmd));
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$TagLED_DATA", DoNotGenerateAcw=true)]
		public partial class TagLED_DATA : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$TagLED_DATA", typeof (TagLED_DATA));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected TagLED_DATA (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/constructor[@name='R2000_calibration.TagLED_DATA' and count(parameter)=1 and parameter[1][@type='com.uhf.api.cls.R2000_calibration']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;)V", "")]
			public unsafe TagLED_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/constructor[@name='R2000_calibration.TagLED_DATA' and count(parameter)=3 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='byte[]'] and parameter[3][@type='int']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;[BI)V", "")]
			public unsafe TagLED_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, byte[] revddata, int len) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";[BI)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_revddata = JNIEnv.NewArray (revddata);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (native_revddata);
					__args [2] = new JniArgumentValue (len);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					if (revddata != null) {
						JNIEnv.CopyArray (native_revddata, revddata);
						JNIEnv.DeleteLocalRef (native_revddata);
					}
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (revddata);
				}
			}

			static Delegate cb_Antenna;
#pragma warning disable 0169
			static Delegate GetAntennaHandler ()
			{
				if (cb_Antenna == null)
					cb_Antenna = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Antenna));
				return cb_Antenna;
			}

			static int n_Antenna (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Antenna ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/method[@name='Antenna' and count(parameter)=0]"
			[Register ("Antenna", "()I", "GetAntennaHandler")]
			public virtual unsafe int Antenna ()
			{
				const string __id = "Antenna.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_Data;
#pragma warning disable 0169
			static Delegate GetDataHandler ()
			{
				if (cb_Data == null)
					cb_Data = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_Data));
				return cb_Data;
			}

			static IntPtr n_Data (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.Data ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/method[@name='Data' and count(parameter)=0]"
			[Register ("Data", "()[B", "GetDataHandler")]
			public virtual unsafe byte[] Data ()
			{
				const string __id = "Data.()[B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
				} finally {
				}
			}

			static Delegate cb_Frequency;
#pragma warning disable 0169
			static Delegate GetFrequencyHandler ()
			{
				if (cb_Frequency == null)
					cb_Frequency = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Frequency));
				return cb_Frequency;
			}

			static int n_Frequency (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Frequency ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/method[@name='Frequency' and count(parameter)=0]"
			[Register ("Frequency", "()I", "GetFrequencyHandler")]
			public virtual unsafe int Frequency ()
			{
				const string __id = "Frequency.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_Lqi;
#pragma warning disable 0169
			static Delegate GetLqiHandler ()
			{
				if (cb_Lqi == null)
					cb_Lqi = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Lqi));
				return cb_Lqi;
			}

			static int n_Lqi (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Lqi ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/method[@name='Lqi' and count(parameter)=0]"
			[Register ("Lqi", "()I", "GetLqiHandler")]
			public virtual unsafe int Lqi ()
			{
				const string __id = "Lqi.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_Phase;
#pragma warning disable 0169
			static Delegate GetPhaseHandler ()
			{
				if (cb_Phase == null)
					cb_Phase = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Phase));
				return cb_Phase;
			}

			static int n_Phase (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Phase ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/method[@name='Phase' and count(parameter)=0]"
			[Register ("Phase", "()I", "GetPhaseHandler")]
			public virtual unsafe int Phase ()
			{
				const string __id = "Phase.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_Protocol;
#pragma warning disable 0169
			static Delegate GetProtocolHandler ()
			{
				if (cb_Protocol == null)
					cb_Protocol = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Protocol));
				return cb_Protocol;
			}

			static int n_Protocol (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Protocol ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/method[@name='Protocol' and count(parameter)=0]"
			[Register ("Protocol", "()I", "GetProtocolHandler")]
			public virtual unsafe int Protocol ()
			{
				const string __id = "Protocol.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_ReadCount;
#pragma warning disable 0169
			static Delegate GetReadCountHandler ()
			{
				if (cb_ReadCount == null)
					cb_ReadCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_ReadCount));
				return cb_ReadCount;
			}

			static int n_ReadCount (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.ReadCount ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/method[@name='ReadCount' and count(parameter)=0]"
			[Register ("ReadCount", "()I", "GetReadCountHandler")]
			public virtual unsafe int ReadCount ()
			{
				const string __id = "ReadCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_TagEpc;
#pragma warning disable 0169
			static Delegate GetTagEpcHandler ()
			{
				if (cb_TagEpc == null)
					cb_TagEpc = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_TagEpc));
				return cb_TagEpc;
			}

			static IntPtr n_TagEpc (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.TagEpc ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/method[@name='TagEpc' and count(parameter)=0]"
			[Register ("TagEpc", "()[B", "GetTagEpcHandler")]
			public virtual unsafe byte[] TagEpc ()
			{
				const string __id = "TagEpc.()[B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
				} finally {
				}
			}

			static Delegate cb_Timestamp;
#pragma warning disable 0169
			static Delegate GetTimestampHandler ()
			{
				if (cb_Timestamp == null)
					cb_Timestamp = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Timestamp));
				return cb_Timestamp;
			}

			static int n_Timestamp (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.TagLED_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Timestamp ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TagLED_DATA']/method[@name='Timestamp' and count(parameter)=0]"
			[Register ("Timestamp", "()I", "GetTimestampHandler")]
			public virtual unsafe int Timestamp ()
			{
				const string __id = "Timestamp.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$Tagtemperture_DATA", DoNotGenerateAcw=true)]
		public partial class Tagtemperture_DATA : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$Tagtemperture_DATA", typeof (Tagtemperture_DATA));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected Tagtemperture_DATA (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/constructor[@name='R2000_calibration.Tagtemperture_DATA' and count(parameter)=1 and parameter[1][@type='com.uhf.api.cls.R2000_calibration']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;)V", "")]
			public unsafe Tagtemperture_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/constructor[@name='R2000_calibration.Tagtemperture_DATA' and count(parameter)=3 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='byte[]'] and parameter[3][@type='int']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;[BI)V", "")]
			public unsafe Tagtemperture_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, byte[] revddata, int wordCount) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";[BI)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_revddata = JNIEnv.NewArray (revddata);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (native_revddata);
					__args [2] = new JniArgumentValue (wordCount);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					if (revddata != null) {
						JNIEnv.CopyArray (native_revddata, revddata);
						JNIEnv.DeleteLocalRef (native_revddata);
					}
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (revddata);
				}
			}

			static Delegate cb_Antenna;
#pragma warning disable 0169
			static Delegate GetAntennaHandler ()
			{
				if (cb_Antenna == null)
					cb_Antenna = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Antenna));
				return cb_Antenna;
			}

			static int n_Antenna (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Tagtemperture_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Antenna ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/method[@name='Antenna' and count(parameter)=0]"
			[Register ("Antenna", "()I", "GetAntennaHandler")]
			public virtual unsafe int Antenna ()
			{
				const string __id = "Antenna.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_Data;
#pragma warning disable 0169
			static Delegate GetDataHandler ()
			{
				if (cb_Data == null)
					cb_Data = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_Data));
				return cb_Data;
			}

			static IntPtr n_Data (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Tagtemperture_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.Data ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/method[@name='Data' and count(parameter)=0]"
			[Register ("Data", "()[B", "GetDataHandler")]
			public virtual unsafe byte[] Data ()
			{
				const string __id = "Data.()[B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
				} finally {
				}
			}

			static Delegate cb_Frequency;
#pragma warning disable 0169
			static Delegate GetFrequencyHandler ()
			{
				if (cb_Frequency == null)
					cb_Frequency = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Frequency));
				return cb_Frequency;
			}

			static int n_Frequency (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Tagtemperture_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Frequency ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/method[@name='Frequency' and count(parameter)=0]"
			[Register ("Frequency", "()I", "GetFrequencyHandler")]
			public virtual unsafe int Frequency ()
			{
				const string __id = "Frequency.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_Lqi;
#pragma warning disable 0169
			static Delegate GetLqiHandler ()
			{
				if (cb_Lqi == null)
					cb_Lqi = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Lqi));
				return cb_Lqi;
			}

			static int n_Lqi (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Tagtemperture_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Lqi ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/method[@name='Lqi' and count(parameter)=0]"
			[Register ("Lqi", "()I", "GetLqiHandler")]
			public virtual unsafe int Lqi ()
			{
				const string __id = "Lqi.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_Phase;
#pragma warning disable 0169
			static Delegate GetPhaseHandler ()
			{
				if (cb_Phase == null)
					cb_Phase = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Phase));
				return cb_Phase;
			}

			static int n_Phase (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Tagtemperture_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Phase ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/method[@name='Phase' and count(parameter)=0]"
			[Register ("Phase", "()I", "GetPhaseHandler")]
			public virtual unsafe int Phase ()
			{
				const string __id = "Phase.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_Protocol;
#pragma warning disable 0169
			static Delegate GetProtocolHandler ()
			{
				if (cb_Protocol == null)
					cb_Protocol = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Protocol));
				return cb_Protocol;
			}

			static int n_Protocol (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Tagtemperture_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Protocol ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/method[@name='Protocol' and count(parameter)=0]"
			[Register ("Protocol", "()I", "GetProtocolHandler")]
			public virtual unsafe int Protocol ()
			{
				const string __id = "Protocol.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_ReadCount;
#pragma warning disable 0169
			static Delegate GetReadCountHandler ()
			{
				if (cb_ReadCount == null)
					cb_ReadCount = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_ReadCount));
				return cb_ReadCount;
			}

			static int n_ReadCount (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Tagtemperture_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.ReadCount ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/method[@name='ReadCount' and count(parameter)=0]"
			[Register ("ReadCount", "()I", "GetReadCountHandler")]
			public virtual unsafe int ReadCount ()
			{
				const string __id = "ReadCount.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_TagEpc;
#pragma warning disable 0169
			static Delegate GetTagEpcHandler ()
			{
				if (cb_TagEpc == null)
					cb_TagEpc = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_TagEpc));
				return cb_TagEpc;
			}

			static IntPtr n_TagEpc (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Tagtemperture_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.TagEpc ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/method[@name='TagEpc' and count(parameter)=0]"
			[Register ("TagEpc", "()[B", "GetTagEpcHandler")]
			public virtual unsafe byte[] TagEpc ()
			{
				const string __id = "TagEpc.()[B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
				} finally {
				}
			}

			static Delegate cb_Timestamp;
#pragma warning disable 0169
			static Delegate GetTimestampHandler ()
			{
				if (cb_Timestamp == null)
					cb_Timestamp = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Timestamp));
				return cb_Timestamp;
			}

			static int n_Timestamp (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Tagtemperture_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Timestamp ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.Tagtemperture_DATA']/method[@name='Timestamp' and count(parameter)=0]"
			[Register ("Timestamp", "()I", "GetTimestampHandler")]
			public virtual unsafe int Timestamp ()
			{
				const string __id = "Timestamp.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TestFre_DATA']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$TestFre_DATA", DoNotGenerateAcw=true)]
		public partial class TestFre_DATA : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$TestFre_DATA", typeof (TestFre_DATA));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected TestFre_DATA (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TestFre_DATA']/constructor[@name='R2000_calibration.TestFre_DATA' and count(parameter)=3 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;II)V", "")]
			public unsafe TestFre_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, int res, int fre) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";II)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (res);
					__args [2] = new JniArgumentValue (fre);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate cb_ToByteData;
#pragma warning disable 0169
			static Delegate GetToByteDataHandler ()
			{
				if (cb_ToByteData == null)
					cb_ToByteData = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToByteData));
				return cb_ToByteData;
			}

			static IntPtr n_ToByteData (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.TestFre_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.ToByteData ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.TestFre_DATA']/method[@name='ToByteData' and count(parameter)=0]"
			[Register ("ToByteData", "()[B", "GetToByteDataHandler")]
			public virtual unsafe byte[] ToByteData ()
			{
				const string __id = "ToByteData.()[B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.VSWRReturnloss_DATA']"
		[global::Android.Runtime.Register ("com/uhf/api/cls/R2000_calibration$VSWRReturnloss_DATA", DoNotGenerateAcw=true)]
		public partial class VSWRReturnloss_DATA : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration$VSWRReturnloss_DATA", typeof (VSWRReturnloss_DATA));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected VSWRReturnloss_DATA (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.VSWRReturnloss_DATA']/constructor[@name='R2000_calibration.VSWRReturnloss_DATA' and count(parameter)=2 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='byte[]']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;[B)V", "")]
			public unsafe VSWRReturnloss_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, byte[] bytedata) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";[B)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_bytedata = JNIEnv.NewArray (bytedata);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (native_bytedata);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					if (bytedata != null) {
						JNIEnv.CopyArray (native_bytedata, bytedata);
						JNIEnv.DeleteLocalRef (native_bytedata);
					}
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (bytedata);
				}
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.VSWRReturnloss_DATA']/constructor[@name='R2000_calibration.VSWRReturnloss_DATA' and count(parameter)=5 and parameter[1][@type='com.uhf.api.cls.R2000_calibration'] and parameter[2][@type='int'] and parameter[3][@type='int[]'] and parameter[4][@type='int[]'] and parameter[5][@type='com.uhf.api.cls.R2000_calibration.Region']]"
			[Register (".ctor", "(Lcom/uhf/api/cls/R2000_calibration;I[I[ILcom/uhf/api/cls/R2000_calibration$Region;)V", "")]
			public unsafe VSWRReturnloss_DATA (global::Com.Uhf.Api.Cls.R2000_calibration __self, int pow, int[] lifreary, int[] antsary, global::Com.Uhf.Api.Cls.R2000_calibration.Region reg) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType) + ";I[I[ILcom/uhf/api/cls/R2000_calibration$Region;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				IntPtr native_lifreary = JNIEnv.NewArray (lifreary);
				IntPtr native_antsary = JNIEnv.NewArray (antsary);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [5];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					__args [1] = new JniArgumentValue (pow);
					__args [2] = new JniArgumentValue (native_lifreary);
					__args [3] = new JniArgumentValue (native_antsary);
					__args [4] = new JniArgumentValue ((reg == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reg).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					if (lifreary != null) {
						JNIEnv.CopyArray (native_lifreary, lifreary);
						JNIEnv.DeleteLocalRef (native_lifreary);
					}
					if (antsary != null) {
						JNIEnv.CopyArray (native_antsary, antsary);
						JNIEnv.DeleteLocalRef (native_antsary);
					}
					global::System.GC.KeepAlive (__self);
					global::System.GC.KeepAlive (lifreary);
					global::System.GC.KeepAlive (antsary);
					global::System.GC.KeepAlive (reg);
				}
			}

			static Delegate cb_Ants;
#pragma warning disable 0169
			static Delegate GetAntsHandler ()
			{
				if (cb_Ants == null)
					cb_Ants = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_Ants));
				return cb_Ants;
			}

			static IntPtr n_Ants (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.VSWRReturnloss_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return global::Android.Runtime.JavaList<global::Java.Lang.Integer>.ToLocalJniHandle (__this.Ants ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.VSWRReturnloss_DATA']/method[@name='Ants' and count(parameter)=0]"
			[Register ("Ants", "()Ljava/util/List;", "GetAntsHandler")]
			public virtual unsafe global::System.Collections.Generic.IList<global::Java.Lang.Integer> Ants ()
			{
				const string __id = "Ants.()Ljava/util/List;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.JavaList<global::Java.Lang.Integer>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_LiFre;
#pragma warning disable 0169
			static Delegate GetLiFreHandler ()
			{
				if (cb_LiFre == null)
					cb_LiFre = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_LiFre));
				return cb_LiFre;
			}

			static IntPtr n_LiFre (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.VSWRReturnloss_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return global::Android.Runtime.JavaList<global::Java.Lang.Integer>.ToLocalJniHandle (__this.LiFre ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.VSWRReturnloss_DATA']/method[@name='LiFre' and count(parameter)=0]"
			[Register ("LiFre", "()Ljava/util/List;", "GetLiFreHandler")]
			public virtual unsafe global::System.Collections.Generic.IList<global::Java.Lang.Integer> LiFre ()
			{
				const string __id = "LiFre.()Ljava/util/List;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.JavaList<global::Java.Lang.Integer>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_Lires;
#pragma warning disable 0169
			static Delegate GetLiresHandler ()
			{
				if (cb_Lires == null)
					cb_Lires = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_Lires));
				return cb_Lires;
			}

			static IntPtr n_Lires (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.VSWRReturnloss_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return global::Android.Runtime.JavaList<global::Java.Lang.Byte>.ToLocalJniHandle (__this.Lires ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.VSWRReturnloss_DATA']/method[@name='Lires' and count(parameter)=0]"
			[Register ("Lires", "()Ljava/util/List;", "GetLiresHandler")]
			public virtual unsafe global::System.Collections.Generic.IList<global::Java.Lang.Byte> Lires ()
			{
				const string __id = "Lires.()Ljava/util/List;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.JavaList<global::Java.Lang.Byte>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_Power;
#pragma warning disable 0169
			static Delegate GetPowerHandler ()
			{
				if (cb_Power == null)
					cb_Power = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Power));
				return cb_Power;
			}

			static int n_Power (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.VSWRReturnloss_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.Power ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.VSWRReturnloss_DATA']/method[@name='Power' and count(parameter)=0]"
			[Register ("Power", "()I", "GetPowerHandler")]
			public virtual unsafe int Power ()
			{
				const string __id = "Power.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}

			static Delegate cb_Regb;
#pragma warning disable 0169
			static Delegate GetRegbHandler ()
			{
				if (cb_Regb == null)
					cb_Regb = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_Regb));
				return cb_Regb;
			}

			static IntPtr n_Regb (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.VSWRReturnloss_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.ToLocalJniHandle (__this.Regb ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.VSWRReturnloss_DATA']/method[@name='Regb' and count(parameter)=0]"
			[Register ("Regb", "()Lcom/uhf/api/cls/R2000_calibration$Region;", "GetRegbHandler")]
			public virtual unsafe global::Com.Uhf.Api.Cls.R2000_calibration.Region Regb ()
			{
				const string __id = "Regb.()Lcom/uhf/api/cls/R2000_calibration$Region;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.Region> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_ToByteData;
#pragma warning disable 0169
			static Delegate GetToByteDataHandler ()
			{
				if (cb_ToByteData == null)
					cb_ToByteData = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ToByteData));
				return cb_ToByteData;
			}

			static IntPtr n_ToByteData (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.VSWRReturnloss_DATA> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.NewArray (__this.ToByteData ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration.VSWRReturnloss_DATA']/method[@name='ToByteData' and count(parameter)=0]"
			[Register ("ToByteData", "()[B", "GetToByteDataHandler")]
			public virtual unsafe byte[] ToByteData ()
			{
				const string __id = "ToByteData.()[B";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/uhf/api/cls/R2000_calibration", typeof (R2000_calibration));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected R2000_calibration (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/constructor[@name='R2000_calibration' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe R2000_calibration () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_GetSendCmd_BarrayB;
#pragma warning disable 0169
		static Delegate GetGetSendCmd_BarrayBHandler ()
		{
			if (cb_GetSendCmd_BarrayB == null)
				cb_GetSendCmd_BarrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPBL_L (n_GetSendCmd_BarrayB));
			return cb_GetSendCmd_BarrayB;
		}

		static IntPtr n_GetSendCmd_BarrayB (IntPtr jnienv, IntPtr native__this, sbyte cmd, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var data = (byte[]) JNIEnv.GetArray (native_data, JniHandleOwnership.DoNotTransfer, typeof (byte));
			IntPtr __ret = JNIEnv.NewArray (__this.GetSendCmd (cmd, data));
			if (data != null)
				JNIEnv.CopyArray (data, native_data);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='GetSendCmd' and count(parameter)=2 and parameter[1][@type='byte'] and parameter[2][@type='byte[]']]"
		[Register ("GetSendCmd", "(B[B)[B", "GetGetSendCmd_BarrayBHandler")]
		public virtual unsafe byte[] GetSendCmd (sbyte cmd, byte[] data)
		{
			const string __id = "GetSendCmd.(B[B)[B";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (cmd);
				__args [1] = new JniArgumentValue (native_data);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		static Delegate cb_GetSendCmd_Lcom_uhf_api_cls_R2000_calibration_R2000cmd_arrayB;
#pragma warning disable 0169
		static Delegate GetGetSendCmd_Lcom_uhf_api_cls_R2000_calibration_R2000cmd_arrayBHandler ()
		{
			if (cb_GetSendCmd_Lcom_uhf_api_cls_R2000_calibration_R2000cmd_arrayB == null)
				cb_GetSendCmd_Lcom_uhf_api_cls_R2000_calibration_R2000cmd_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_GetSendCmd_Lcom_uhf_api_cls_R2000_calibration_R2000cmd_arrayB));
			return cb_GetSendCmd_Lcom_uhf_api_cls_R2000_calibration_R2000cmd_arrayB;
		}

		static IntPtr n_GetSendCmd_Lcom_uhf_api_cls_R2000_calibration_R2000cmd_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_cmdot, IntPtr native_data)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var cmdot = global::Java.Lang.Object.GetObject<global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd> (native_cmdot, JniHandleOwnership.DoNotTransfer);
			var data = (byte[]) JNIEnv.GetArray (native_data, JniHandleOwnership.DoNotTransfer, typeof (byte));
			IntPtr __ret = JNIEnv.NewArray (__this.GetSendCmd (cmdot, data));
			if (data != null)
				JNIEnv.CopyArray (data, native_data);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='GetSendCmd' and count(parameter)=2 and parameter[1][@type='com.uhf.api.cls.R2000_calibration.R2000cmd'] and parameter[2][@type='byte[]']]"
		[Register ("GetSendCmd", "(Lcom/uhf/api/cls/R2000_calibration$R2000cmd;[B)[B", "GetGetSendCmd_Lcom_uhf_api_cls_R2000_calibration_R2000cmd_arrayBHandler")]
		public virtual unsafe byte[] GetSendCmd (global::Com.Uhf.Api.Cls.R2000_calibration.R2000cmd cmdot, byte[] data)
		{
			const string __id = "GetSendCmd.(Lcom/uhf/api/cls/R2000_calibration$R2000cmd;[B)[B";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((cmdot == null) ? IntPtr.Zero : ((global::Java.Lang.Object) cmdot).Handle);
				__args [1] = new JniArgumentValue (native_data);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (cmdot);
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='ListBtobytes' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;java.lang.Byte&gt;']]"
		[Register ("ListBtobytes", "(Ljava/util/List;)[B", "")]
		public static unsafe byte[] ListBtobytes (global::System.Collections.Generic.IList<global::Java.Lang.Byte> lb)
		{
			const string __id = "ListBtobytes.(Ljava/util/List;)[B";
			IntPtr native_lb = global::Android.Runtime.JavaList<global::Java.Lang.Byte>.ToLocalJniHandle (lb);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_lb);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
				JNIEnv.DeleteLocalRef (native_lb);
				global::System.GC.KeepAlive (lb);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='bytesToint' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("bytesToint", "([B)I", "")]
		public static unsafe int BytesToint (byte[] data)
		{
			const string __id = "bytesToint.([B)I";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='bytesToint' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='int']]"
		[Register ("bytesToint", "([BI)I", "")]
		public static unsafe int BytesToint (byte[] data, int st)
		{
			const string __id = "bytesToint.([BI)I";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_data);
				__args [1] = new JniArgumentValue (st);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='bytesTolistbytes' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("bytesTolistbytes", "([B)Ljava/util/List;", "")]
		public static unsafe global::System.Collections.Generic.IList<global::Java.Lang.Byte> BytesTolistbytes (byte[] data)
		{
			const string __id = "bytesTolistbytes.([B)Ljava/util/List;";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaList<global::Java.Lang.Byte>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='bytesToshort' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("bytesToshort", "([B)S", "")]
		public static unsafe short BytesToshort (byte[] data)
		{
			const string __id = "bytesToshort.([B)S";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.StaticMethods.InvokeInt16Method (__id, __args);
				return __rm;
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='calcCrc' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("calcCrc", "([BII)[B", "")]
		public static unsafe byte[] CalcCrc (byte[] message, int offset, int length)
		{
			const string __id = "calcCrc.([BII)[B";
			IntPtr native_message = JNIEnv.NewArray (message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_message);
				__args [1] = new JniArgumentValue (offset);
				__args [2] = new JniArgumentValue (length);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
				if (message != null) {
					JNIEnv.CopyArray (native_message, message);
					JNIEnv.DeleteLocalRef (native_message);
				}
				global::System.GC.KeepAlive (message);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='calcCrc_short' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("calcCrc_short", "([B)S", "")]
		public static unsafe short CalcCrc_short (byte[] message)
		{
			const string __id = "calcCrc_short.([B)S";
			IntPtr native_message = JNIEnv.NewArray (message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_message);
				var __rm = _members.StaticMethods.InvokeInt16Method (__id, __args);
				return __rm;
			} finally {
				if (message != null) {
					JNIEnv.CopyArray (native_message, message);
					JNIEnv.DeleteLocalRef (native_message);
				}
				global::System.GC.KeepAlive (message);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='intTobytes' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("intTobytes", "(I)[B", "")]
		public static unsafe byte[] IntTobytes (int data)
		{
			const string __id = "intTobytes.(I)[B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (data);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='intTolistbytes' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("intTolistbytes", "(I)Ljava/util/List;", "")]
		public static unsafe global::System.Collections.Generic.IList<global::Java.Lang.Byte> IntTolistbytes (int data)
		{
			const string __id = "intTolistbytes.(I)Ljava/util/List;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (data);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaList<global::Java.Lang.Byte>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='intsTolistints' and count(parameter)=1 and parameter[1][@type='int[]']]"
		[Register ("intsTolistints", "([I)Ljava/util/List;", "")]
		public static unsafe global::System.Collections.Generic.IList<global::Java.Lang.Integer> IntsTolistints (int[] data)
		{
			const string __id = "intsTolistints.([I)Ljava/util/List;";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaList<global::Java.Lang.Integer>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='shortTobytes' and count(parameter)=1 and parameter[1][@type='short']]"
		[Register ("shortTobytes", "(S)[B", "")]
		public static unsafe byte[] ShortTobytes (short data)
		{
			const string __id = "shortTobytes.(S)[B";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (data);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.uhf.api.cls']/class[@name='R2000_calibration']/method[@name='shortTolistbytes' and count(parameter)=1 and parameter[1][@type='short']]"
		[Register ("shortTolistbytes", "(S)Ljava/util/List;", "")]
		public static unsafe global::System.Collections.Generic.IList<global::Java.Lang.Byte> ShortTolistbytes (short data)
		{
			const string __id = "shortTolistbytes.(S)Ljava/util/List;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (data);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaList<global::Java.Lang.Byte>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

	}
}
